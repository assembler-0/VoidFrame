# ============================================================================
# VoidFrame Feature Configuration Flags
# ============================================================================

if(VF_CONFIG_ENABLE_XHCI)
    add_compile_definitions(VF_CONFIG_ENABLE_XHCI)
endif()
if(VF_CONFIG_ENABLE_VIRTIO)
    add_compile_definitions(VF_CONFIG_ENABLE_VIRTIO)
endif()
if(VF_CONFIG_ENABLE_ISA)
    add_compile_definitions(VF_CONFIG_ENABLE_ISA)
endif()
if(VF_CONFIG_ENABLE_LPT)
    add_compile_definitions(VF_CONFIG_ENABLE_LPT)
endif()
if(VF_CONFIG_ENABLE_PCI)
    add_compile_definitions(VF_CONFIG_ENABLE_PCI)
endif()
if(VF_CONFIG_ENABLE_PS2)
    add_compile_definitions(VF_CONFIG_ENABLE_PS2)
endif()
if(VF_CONFIG_ENABLE_IDE)
    add_compile_definitions(VF_CONFIG_ENABLE_IDE)
endif()
if(VF_CONFIG_ENABLE_VFCOMPOSITOR)
    add_compile_definitions(VF_CONFIG_ENABLE_VFCOMPOSITOR)
endif()
if(VF_CONFIG_ENABLE_AHCI)
    add_compile_definitions(VF_CONFIG_ENABLE_AHCI)
endif()
if(VF_CONFIG_ENABLE_NVME)
    add_compile_definitions(VF_CONFIG_ENABLE_NVME)
endif()
if(VF_CONFIG_ENABLE_GENERIC_SOUND)
    add_compile_definitions(VF_CONFIG_ENABLE_GENERIC_SOUND)
endif()
if(VF_CONFIG_RTC_CENTURY)
    add_compile_definitions(VF_CONFIG_RTC_CENTURY)
endif()
if(VF_CONFIG_ENFORCE_MEMORY_PROTECTION)
    add_compile_definitions(VF_CONFIG_ENFORCE_MEMORY_PROTECTION)
endif()
if(VF_CONFIG_VM_HOST)
    add_compile_definitions(VF_CONFIG_VM_HOST)
endif()
if(VF_CONFIG_SNOOZE_ON_BOOT)
    add_compile_definitions(VF_CONFIG_SNOOZE_ON_BOOT)
endif()
if(VF_CONFIG_USE_VFSHELL)
    add_compile_definitions(VF_CONFIG_USE_VFSHELL)
endif()
if(VF_CONFIG_USE_DYNAMOX)
    add_compile_definitions(VF_CONFIG_USE_DYNAMOX)
endif()
if(VF_CONFIG_USE_ASTRA)
    add_compile_definitions(VF_CONFIG_USE_ASTRA)
endif()
if(VF_CONFIG_USE_CERBERUS)
    add_compile_definitions(VF_CONFIG_USE_CERBERUS)
endif()
if(VF_CONFIG_CERBERUS_STACK_PROTECTION)
    add_compile_definitions(VF_CONFIG_CERBERUS_STACK_PROTECTION)
endif()
if(VF_CONFIG_INTEL)
    add_compile_definitions(VF_CONFIG_INTEL)
endif()
if(VF_CONFIG_ENABLE_OPIC)
    add_compile_definitions(VF_CONFIG_ENABLE_OPIC)
endif()

if(VF_CONFIG_ENABLE_VMWARE_SVGA_II)
    add_compile_definitions(VF_CONFIG_ENABLE_VMWARE_SVGA_II)
endif()

if(VF_CONFIG_ENABLE_CERBERUS_VFS_LOGGING)
    add_compile_definitions(VF_CONFIG_ENABLE_CERBERUS_VFS_LOGGING)
endif()

if(VF_CONFIG_CERBERUS_THREAT_REPORTING)
    add_compile_definitions(VF_CONFIG_CERBERUS_THREAT_REPORTING)
endif()

if(VF_CONFIG_PANIC_OVERRIDE)
    add_compile_definitions(VF_CONFIG_PANIC_OVERRIDE)
endif()

if(VF_CONFIG_LOAD_MB_MODULES)
    add_compile_definitions(VF_CONFIG_LOAD_MB_MODULES)
endif()

if(EXCLUDE_EXTRA_OBJECTS)
    add_compile_definitions(VF_CONFIG_EXCLUDE_EXTRA_OBJECTS)
endif()

if(AUTOMATIC_POST)
    add_compile_definitions(VF_CONFIG_AUTOMATIC_POST)
endif()

if(VF_SCHEDULER STREQUAL "MLFQ")
    add_compile_definitions(VF_CONFIG_SCHED_MLFQ)
elseif(VF_SCHEDULER STREQUAL "EEVDF")
    add_compile_definitions(VF_CONFIG_SCHED_EEVDF)
else()
    message(FATAL_ERROR "Invalid scheduler: ${VF_SCHEDULER}. Did you pass: -DVF_SCHEDULER=<MLFQ/EEVDF>?")
endif()